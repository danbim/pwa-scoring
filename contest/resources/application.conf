akka {
  actor {
    provider = "cluster"
    serializers = {
      json-journal-serializer-v1 = "com.bimschas.pwascoring.journal.JsonJournalSerializerV1"
    }
    serialization-bindings = {
      "com.bimschas.pwascoring.domain.ContestPlannedEvent" = json-journal-serializer-v1
      "com.bimschas.pwascoring.domain.HeatPlannedEvent"    = json-journal-serializer-v1
      "com.bimschas.pwascoring.domain.HeatStartedEvent"    = json-journal-serializer-v1
      "com.bimschas.pwascoring.domain.WaveScoredEvent"     = json-journal-serializer-v1
      "com.bimschas.pwascoring.domain.JumpScoredEvent"     = json-journal-serializer-v1
      "com.bimschas.pwascoring.domain.HeatEndedEvent"      = json-journal-serializer-v1
    }
  }
  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://pwa-scoring@127.0.0.1:2551" // TODO this must be set dynamically within specs
    ]
  }
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  loglevel = "DEBUG"

  extensions = [akka.persistence.Persistence]
  persistence {
    journal {
      #plugin = "akka.persistence.journal.inmem"
      plugin = "akka.persistence.journal.leveldb"
      auto-start-journals = ["akka.persistence.journal.leveldb"]
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
    }
  }
}
